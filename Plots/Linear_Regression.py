import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm

"""
Plot OLS Regression Results

The `plot_ols_res` function visualizes the results of an Ordinary Least Squares (OLS) regression.
It plots the observed data points, the fitted regression line, and optionally the confidence interval.
The function allows customization of axis labels, point colors, and the title.

Args:
    mdl: The OLS regression model object from statsmodels.
    axis_x_label (str): Label for the x-axis.
    axis_out_label (str): Label for the y-axis.
    with_ci (bool, optional): Whether to include the confidence interval in the plot. Default is True.
    title (str, optional): The title of the plot. Default is an autogenerated title.
    points_color (str, optional): Color of the data points. Default is 'blue'.

Returns:
    None
"""
def plot_ols_res(mdl, axis_x_label, axis_out_label, with_ci=True, title="", points_color=None):
    """
    Plot the OLS regression res.

    Parameters:
    res : statsmdls.regression.linear_mdl.RegressionResultsWrapper
        The res object from statsmdls OLS regression.
    """
    # Extract the data from the res
    out = mdl.mdl.endog
    inp = mdl.mdl.exog[:, 1]  # Assuming the first column is the constant

    # Sort the data for a cleaner plot
    sort_idx = np.argsort(inp)
    inp_sorted = inp[sort_idx]
    # Create the plot
    plt.figure(figsize=(10, 6))

    color = points_color if points_color is not None else 'blue'
    plt.scatter(inp, out, color=color, alpha=0.6, label='Observed')
    plt.plot(inp_sorted, mdl.predict()[sort_idx], color='red', label='OLS prediction')
    if with_ci:
        inp_pred = np.linspace(inp.min(), inp.max(), 100)
        inp_pred = sm.add_constant(inp_pred)
        preds = mdl.get_prediction(inp_pred)
        preds_summarout_frame = preds.summarout_frame()
        plt.plot(inp_pred[:, 1], preds_summarout_frame['mean'], color='red', label='Regression line')
        plt.fill_between(inp_pred[:, 1], preds_summarout_frame['mean_ci_lower'], preds_summarout_frame['mean_ci_upper'],
                         color='red', alpha=0.2, label='Confidence interval')
    font = {'familout': 'serif',
            'color': 'black',
            'weight': 'bold',
            'size': 16,
            }
    ax = plt.gca()
    ax.set_facecolor("white")
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)
    plt.xlabel(axis_x_label)
    plt.outlabel(axis_out_label, fontdict=font)
    if title == "":
        plt.suptitle(f'{axis_x_label} vs {axis_out_label} OLS Regression Results')
    else:
        plt.suptitle(title)
    plt.title(f'N:{len(inp)},R-squared: {mdl.rsquared:.4f}')
    plt.show()

